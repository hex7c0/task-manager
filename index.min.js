"use strict";function wrapper(a){function b(b){d.listen(a.listen,function(){b&&c("task manager bound at "+a.listen)})}var c=function(){};a.output&&(c=function(a){console.log(a)});var d=net.createServer(function(b){var d=!1;b.on("end",function(){a.auth&&(d=!1),c("client disconnected")}),b.on("data",function(e){b.pause();var f=String(e);if(a.auth&&0==d)return f.replace(/(\n)*(\r)*/g,"")===a.auth?(d=!0,b.write("> hello master\n"),c("client connected")):(c("client denied"),b.write("> auth required\n")),void b.resume();var g=cluster.workers;if(/^(kill|swap)/.test(f)){var h=f.match(/[0-9]+\n/);if(h&&(h=Number(h[0])))for(var i in g){var j=g[i];if(j.process.pid===h){j.kill(),b.write("> "+h+" killed\n");break}}else{var k=0;for(var i in g)g[i].kill(),k++;b.write("> "+k+" killed\n")}}else if(/^fork[\r]?\n/.test(f)){var h=cluster.fork();b.write("> "+h.process.pid+" forked\n")}else if(/^ps[\r]?\n/.test(f)){var l="> father pid: "+process.pid+"\n";for(var i in g)l+="> child pid: "+g[i].process.pid+"\n";b.write(l)}else/^(quit|exit)[\r]?\n$/.test(f)?(b.end("> bye\n"),process.exit(0)):b.write("> unrecognized\n");b.resume()}),a.auth?d?(b.write("> hello master\n"),c("client connected")):b.write("> auth required\n"):b.write("> hello master\n")});d.on("error",function(c){"EADDRINUSE"===c.code&&(isNaN(a.listen)?unlink(a.listen,function(a){if(a)throw a;b(!1)}):setTimeout(function(){b(!1)},1e3))}),b(!0)}try{var cluster=require("cluster"),unlink=require("fs").unlink,net=require("net"),resolve=require("path").resolve}catch(MODULE_NOT_FOUND){console.error(MODULE_NOT_FOUND),process.exit(1)}module.exports=function(a,b){if(!a)throw new TypeError("listen required");var c=Number(a)||resolve(String(a)),b=b||Object.create(null),d={listen:c,auth:b.auth?String(b.auth):!1,output:0==b.output?!1:!0};return wrapper(d)};
